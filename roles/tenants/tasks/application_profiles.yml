---
# file: roles/tenants/tasks/application_profiles.yml

- name: Create the application profiles
  aci_ap:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    ap: 'ap_{{ ap_name }}_{{ item }}'
    tenant: 'tn_{{ tenant_name }}'
  with_items:
    - '{{ vrfs }}'

- name: Create the frontend endpoint groups
  aci_epg:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    epg: 'epg_{{ item.1 }}'
    ap: 'ap_{{ ap_name }}_{{ item.0 }}'
    bd: 'bd_{{ item.0 }}_frontend'
    tenant: 'tn_{{ tenant_name }}'
  with_nested:
    - '{{ vrfs }}'
    - '{{ frontend_epgs }}'

- name: Create the backend endpoint groups
  aci_epg:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    epg: 'epg_{{ item.1 }}'
    ap: 'ap_{{ ap_name }}_{{ item.0 }}'
    bd: 'bd_{{ item.0 }}_backend'
    tenant: 'tn_{{ tenant_name }}'
  with_nested:
    - '{{ vrfs }}'
    - '{{ backend_epgs }}'

- name: Combine frontend and backend EPGs
  set_fact:
    epgs: '{{ frontend_epgs + backend_epgs }}'

- name: Attach provided contract to EPGs
  aci_epg_to_contract:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    contract_type: provider
    contract: 'ctrct_{{ item.1 }}'
    epg: 'epg_{{ item.1 }}'
    ap: 'ap_{{ ap_name }}_{{ item.0 }}'
    tenant: 'tn_{{ tenant_name }}'
  with_nested:
    - '{{ vrfs }}'
    - '{{ epgs }}'

- name: Attach consumed contracts to web EPGs
  aci_epg_to_contract:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    contract_type: consumer
    contract: 'ctrct_{{ epgs.1 }}'
    epg: 'epg_{{ epgs.0 }}'
    ap: 'ap_{{ ap_name }}_{{ item }}'
    tenant: 'tn_{{ tenant_name }}'
  with_items:
    - '{{ vrfs }}'

- name: Attach consumed contracts to app EPGs
  aci_epg_to_contract:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    contract_type: consumer
    contract: 'ctrct_{{ epgs.2 }}'
    epg: 'epg_{{ epgs.1 }}'
    ap: 'ap_{{ ap_name }}_{{ item }}'
    tenant: 'tn_{{ tenant_name }}'
  with_items:
    - '{{ vrfs }}'

- name: Attach bare metal domain to EPGs
  aci_epg_to_domain:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    tenant: 'tn_{{ tenant_name }}'
    ap: 'ap_{{ ap_name }}_{{ item.0 }}'
    epg: 'epg_{{ item.1 }}'
    domain: dom_bare_metal
    domain_type: phys
  with_nested:
    - '{{ vrfs }}'
    - '{{ epgs }}'

- name: Create static mappings
  aci_static_binding_to_epg:
    hostname: '{{ inventory_hostname }}'
    username: '{{ script_user }}'
    private_key: '{{ keyfile }}'
    validate_certs: no
    tenant: 'tn_{{ tenant_name }}'
    ap: 'ap_{{ ap_name }}_{{ item.1 }}'
    epg: 'epg_{{ item.2 }}'
    encap_id: '{{ initial_vlan + vlan_index }}'
    interface_type: vpc
    interface_mode: trunk
    deploy_immediacy: immediate
    pod_id: 1
    leafs: '{{ item.0.leafs }}'
    interface: 'ipg_vpc_{{ item.0.device }}'
  loop: '{{ vpcs | product(vrfs, epgs) | list }}'
  loop_control:
    index_var: vlan_index
